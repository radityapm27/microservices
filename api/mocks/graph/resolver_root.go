// Code generated by mockery 2.7.5. DO NOT EDIT.

package mocks

import (
	graph "rpm/microservices/api/graph"

	mock "github.com/stretchr/testify/mock"
)

// ResolverRoot is an autogenerated mock type for the ResolverRoot type
type ResolverRoot struct {
	mock.Mock
}

// ProductCatalog provides a mock function with given fields:
func (_m *ResolverRoot) ProductCatalog() graph.ProductCatalogResolver {
	ret := _m.Called()

	var r0 graph.ProductCatalogResolver
	if rf, ok := ret.Get(0).(func() graph.ProductCatalogResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(graph.ProductCatalogResolver)
		}
	}

	return r0
}

// Query provides a mock function with given fields:
func (_m *ResolverRoot) Query() graph.QueryResolver {
	ret := _m.Called()

	var r0 graph.QueryResolver
	if rf, ok := ret.Get(0).(func() graph.QueryResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(graph.QueryResolver)
		}
	}

	return r0
}

// ShoppingCart provides a mock function with given fields:
func (_m *ResolverRoot) ShoppingCart() graph.ShoppingCartResolver {
	ret := _m.Called()

	var r0 graph.ShoppingCartResolver
	if rf, ok := ret.Get(0).(func() graph.ShoppingCartResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(graph.ShoppingCartResolver)
		}
	}

	return r0
}

// User provides a mock function with given fields:
func (_m *ResolverRoot) User() graph.UserResolver {
	ret := _m.Called()

	var r0 graph.UserResolver
	if rf, ok := ret.Get(0).(func() graph.UserResolver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(graph.UserResolver)
		}
	}

	return r0
}
